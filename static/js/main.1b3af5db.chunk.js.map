{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","getItems","Math","ceil","className","classNames","disabled","href","onClick","map","getItem","active","items","App","useState","setPerPage","setCurrentPage","sumLastItems","firstItems","lastItems","listItems","slice","id","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAWX,EAAW,EADdY,KAAKC,KAAKN,EAAQC,IAehC,OAEE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBP,IAAnD,SACE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QArBS,WACK,IAAhBT,GACFC,EAAaD,EAAc,IAczB,oBAUDE,EAASQ,KAAI,SAAAC,GAAO,OACnB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAAYX,IAJ1B,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMN,EAASF,EAAc,IACjCS,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUJ,KAAKC,KAAKN,EAAQC,KAD7C,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMN,EAASF,EAAc,IACjC,gBAAeA,EAAcG,KAAKC,KAAKN,EAAQC,GAC/CU,QA/CS,WACXT,EAAcG,KAAKC,KAAKN,EAAQC,IAClCE,EAAaD,EAAc,IAwCzB,wBC7DFa,EAAQtB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAIPmB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KAEMC,EAAenB,EAAUC,EACzBmB,EAAapB,GAAWC,EAAc,GACtCoB,EAAYF,EARD,GAQ6BA,EAR7B,GAUXG,EAAYR,EAAMS,MAAMH,EAAYC,GAM1C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCmB,EAAa,EAD9C,cACqDC,EADrD,eApBa,GAoBb,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOzB,EACP0B,SAAU,SAAAC,GACRT,EAAe,GACfD,GAAYU,EAAMC,OAAOH,QAP7B,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAjDW,GAkDXC,QAASA,EACTC,YAAaA,EACbC,aAxCuB,SAAC4B,GAC5BZ,EAAeY,MA0Cb,6BACGR,EAAUX,KAAI,SAAAoB,GAAI,OACjB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YChEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1b3af5db.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const items = Math.ceil(total / perPage);\n  const getItems = getNumbers(1, items);\n\n  const itemPrev = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const itemLast = () => {\n    if (currentPage < Math.ceil(total / perPage)) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={itemPrev}\n        >\n          «\n        </a>\n      </li>\n      {getItems.map(getItem => (\n        <li\n          key={getItem}\n          className={classNames(\n            'page-item',\n            { active: getItem === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${getItems[currentPage - 1]}`}\n            onClick={() => onPageChange(getItem)}\n          >\n            {getItem}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item', { disabled: Math.ceil(total / perPage) },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${getItems[currentPage + 1]}`}\n          aria-disabled={currentPage < Math.ceil(total / perPage)}\n          onClick={itemLast}\n\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst totalItems = 42;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const sumLastItems = perPage * currentPage;\n  const firstItems = perPage * (currentPage - 1);\n  const lastItems = sumLastItems < totalItems ? sumLastItems : totalItems;\n\n  const listItems = items.slice(firstItems, lastItems);\n\n  const handleSetCurrentPage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItems + 1} - ${lastItems} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleSetCurrentPage}\n      />\n\n      <ul>\n        {listItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}